"use strict";(self.webpackChunkrill_flow_github_io=self.webpackChunkrill_flow_github_io||[]).push([[786],{1193:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>u});var o=t(5893),i=t(1151);const s={sidebar_position:5},r="Flow Control",a={id:"user-guide/defination/control",title:"Flow Control",description:"Rill Flow supports dynamic control of the workflow execution path during its runtime, similar to control statements in programming.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/user-guide/03-defination/05-control.md",sourceDirName:"user-guide/03-defination",slug:"/user-guide/defination/control",permalink:"/en/docs/user-guide/defination/control",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/rill-flow/en",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Context and Parameter Mapping",permalink:"/en/docs/user-guide/defination/context-and-mapping"},next:{title:"Workflow Reference",permalink:"/en/docs/user-guide/defination/ref"}},c={},u=[{value:"Flow Control Nodes",id:"flow-control-nodes",level:2},{value:"choice",id:"choice",level:3},{value:"foreach",id:"foreach",level:3},{value:"paas",id:"paas",level:3},{value:"return",id:"return",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"flow-control",children:"Flow Control"}),"\n",(0,o.jsx)(n.p,{children:"Rill Flow supports dynamic control of the workflow execution path during its runtime, similar to control statements in programming."}),"\n",(0,o.jsx)(n.h2,{id:"flow-control-nodes",children:"Flow Control Nodes"}),"\n",(0,o.jsx)(n.p,{children:"Flow control nodes include the following types:"}),"\n",(0,o.jsx)(n.h3,{id:"choice",children:"choice"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"choice"})," node is used to perform specific subtasks according to the conditions in multiple sub-tasks when the DAG graph is running.The ",(0,o.jsx)(n.code,{children:"choice"})," node is used to select a specific sub-task from multiple sub-tasks based on conditions during the execution of the DAG diagram. It defines a group of sub-tasks through the ",(0,o.jsx)(n.code,{children:"tasks"})," field, and the conditions for executing this group are defined using the JsonPath format in the ",(0,o.jsx)(n.code,{children:"condition"})," field."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'category: choice\nname: A\ninputMappings:\n  - target: $. nput.status\n    source: $context.status\n  - target: $input. Death\n    source: $.context.path\noutputMappings:\n  - target: $. ontext.path\n    source: $output.path\nchoices:\n  - condition: $. nput.[?(@. tatus == "success")]\n    tasks: \n      - category: function\n        resourceName: protocol:/content\n        pattern: task_async\n        name: B1\n        inputMappings:\n           - target: $. nput.path\n             source: $. ontext. ath\n        outputMappings:\n           - target: $. ontext. Death\n             source: $output.path\n  - condition: $input.?(@. tatus == "failed")]\n    tasks: \n      - category: function\n        resourceName: protocol:/content\n        pattern: task_async\n        name: B2\n        inputMappings:\n           - target: $. nput.path\n             source: $.context. ath\n        outputMappings:\n           - target: $. ontext.path\n             source: $output.path\nnext: C\n'})}),"\n",(0,o.jsx)(n.h3,{id:"foreach",children:"foreach"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"foreach"})," node is used to loop into a set of sub-tasks.The ",(0,o.jsx)(n.code,{children:"foreach"})," node is used for looping through a group of tasks. The ",(0,o.jsx)(n.code,{children:"tasks"})," field defines a list of tasks to be executed, and the optional ",(0,o.jsx)(n.code,{children:"synchronization"})," field is used to filter tasks from this list for execution, executing them concurrently according to the maximum concurrency defined in ",(0,o.jsx)(n.code,{children:"synchronization"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["The loop arguments are set via ",(0,o.jsx)(n.code,{children:"iterationMapping"}),".Loop execution parameters are set via ",(0,o.jsx)(n.code,{children:"iterationMapping"}),". ",(0,o.jsx)(n.code,{children:"iterationMapping.collection"})," uses the JsonPath format to define the collection to be iterated over, and ",(0,o.jsx)(n.code,{children:"item"})," defines the name of the current element in the loop. Through the definition of ",(0,o.jsx)(n.code,{children:"iterationMapping"}),", the parameter mapping in sub-tasks can access corresponding parameter values. For more information about parameter mapping, see: ",(0,o.jsx)(n.a,{href:"/en/docs/user-guide/defination/context-and-mapping",children:"Parameter Mapping"}),".The value of the parameter in the subtask can be obtained by using the ",(0,o.jsx)(n.code,{children:"iterationMapping"})," definition.See\uff1a[\u53c2\u6570\u6620\u5c04](04-context-and-mapping.md."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"category: foreach\nname: A\ninputMappings:\n  - target: $input.segments\n    source: $.context. egments\nsynchronization:\n  conditions:\n    - $input[?(@. ignal == true]\n  maxConcert: 3\niterationMapping:\n    collection: $.input. egments\n    item: segmentUrl\noutputMappings:\n  - target: $.context.gopUrls\n    source: $output.sub_context.[*]. opUrl\ntasks:\n   - category: function\n     resourceName: protocol:/content\n     pattern: task_async\n     name: B1\n     next: B2\n     inputMappings:\n        - target: $. nput.segmentUrl\n          source: $.context. egmentUrl\n     outputMappings:\n        - target: $. ontext.gopPath\n          source: $.output. opPath\n   - category: function\n     resourceName: protocol:/content\n     name: B2\n     pattern: task_async\n     inputMappings:\n        - target: $. nput.gopPath\n          source: $.context. opPath\n     outputMappings:\n        - target: $. ontext.gopUrl\n          source: $output.gopUrl\nnext: C\n"})}),"\n",(0,o.jsx)(n.h3,{id:"paas",children:"paas"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"pass"})," is an empty task.The ",(0,o.jsx)(n.code,{children:"pass"})," is an empty task. When the ",(0,o.jsx)(n.code,{children:"pass"})," task is executed, it is immediately set to success."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"category: pass\nname: A\ninputMappings:\n  - target: $input.url\n    source: $.context. rl\noutputMappings:\n  - target: $context.segment.text\n    source: $.context.text\nnext: B,C\n"})}),"\n",(0,o.jsx)(n.h3,{id:"return",children:"return"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"return"})," is used to determine whether or not to skip the next node.The ",(0,o.jsx)(n.code,{children:"return"})," node is used to decide whether to skip subsequent nodes. When executing the ",(0,o.jsx)(n.code,{children:"return"})," task, it checks the ",(0,o.jsx)(n.code,{children:"conditions"})," based on the context information. If the condition evaluates to true, all subsequent nodes are skipped; otherwise, the execution continues."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'category: return\nname: A\ninputMappings:\n   - target: $. nput.url\n     source: $.context.url\n   - target: $. nput.text\n     source: $.context.text\nconditions:\n  - $.input.[?(@.text == "aaaa" && @.url == "bbb")]\nnext: B\n'})})]})}function p(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>r});var o=t(7294);const i={},s=o.createContext(i);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);